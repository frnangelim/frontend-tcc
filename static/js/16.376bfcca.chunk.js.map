{"version":3,"sources":["pages/Login/styles.js","services/AuthService.js","pages/Login/index.js","services/RequestService.js"],"names":["CustomCard","styled","Card","CustomLabel","Label","CustomButton","Button","BottomContainer","div","request","require","BASE_URL","process","login","data","url","URL","body","method","Login","props","useState","email","password","user","setUser","errorMessage","setErrorMessage","history","useHistory","onChangeInput","e","name","target","value","onSubmit","a","preventDefault","AuthService","response","localStorage","setItem","jwt","id","loginEvent","push","console","log","err","message","style","textAlign","src","logo","alt","width","height","CardBody","Form","Row","Col","sm","FormGroup","for","Input","type","onChange","required","color","onClick","TIMEOUT_IN_SECONDS","parseInt","REACT_APP_TIMEOUT_IN_SECONDS","params","options","headers","userToken","getItem","Headers","Object","keys","forEach","key","undefined","searchParams","append","JSON","stringify","Promise","resolve","reject","timeoutId","setTimeout","Error","fetch","then","clearTimeout","status","ok","json","result"],"mappings":"iSAGaA,EAAaC,YAAOC,IAAPD,CAAH,qcAwBVE,EAAcF,YAAOG,IAAPH,CAAH,kEAKXI,EAAeJ,YAAOK,IAAPL,CAAH,0FAaZM,GAPqBN,IAAOO,IAAV,oGAOAP,IAAOO,IAAV,sE,gBC5CpBC,EAAYC,EAAQ,IAApBD,QAGFE,EAAQ,UAAMC,wBAAN,SAEP,SAASC,EAAMC,GACpB,IAAMC,EAAM,IAAIC,IAAIL,EAAW,UAI/B,OAAOF,EAAQ,CACbM,MACAE,KAAMH,EACNI,OALW,S,WCkGAC,UA7Ff,SAAeC,GAAQ,IAAD,EACIC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAHQ,mBACbC,EADa,KACPC,EADO,OAKoBJ,mBAAS,IAL7B,mBAKbK,EALa,KAKCC,EALD,KAMdC,EAAUC,cAEVC,EAAgB,SAACC,GACrB,IAAIC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACrBT,EAAQ,2BAAKD,GAAN,kBAAaQ,EAAOE,MAGvBC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACfL,EAAEM,iBADa,kBAGQC,EAAkBd,GAH1B,QAGTe,EAHS,UAKXC,aAAaC,QAAQ,WAAYF,EAASG,KAC1CF,aAAaC,QAAQ,UAAWF,EAASf,KAAKmB,IAC9CvB,EAAMwB,aACNhB,EAAQiB,KAAK,kBARF,gDAWbC,QAAQC,IAAI,QAAZ,MACApB,EACE,MAAS,KAAMqB,IACX,KAAMA,IAAIC,QACV,qCAfO,yDAAH,sDAoBd,OACE,eAACjD,EAAD,WACE,qBAAKkD,MAAO,CAAEC,UAAW,UAAzB,SACE,qBAAKC,IAAKC,IAAMC,IAAI,OAAOJ,MAAO,CAAEK,MAAO,GAAIC,OAAQ,QAEzD,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMvB,SAAUA,EAAhB,UACE,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,WACE,cAAC3D,EAAD,CAAa4D,IAAI,QAAjB,oBACA,cAACC,EAAA,EAAD,CACEC,KAAK,QACLjC,KAAK,QACLW,GAAG,QACHuB,SAAUpC,EACVI,MAAOV,EAAKF,MACZ6C,UAAQ,SAId,cAACP,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,eAACC,EAAA,EAAD,WACE,cAAC3D,EAAD,CAAa4D,IAAI,QAAjB,oBACA,cAACC,EAAA,EAAD,CACEC,KAAK,WACLjC,KAAK,WACLW,GAAG,WACHuB,SAAUpC,EACVI,MAAOV,EAAKD,SACZ4C,UAAQ,YAKfzC,GACC,eAAC,IAAD,WACGA,EACD,0BAGJ,uBACA,cAACrB,EAAD,CAAc+D,MAAM,UAApB,oBAEA,cAAC7D,EAAD,CACE8D,QAAS,WACPzC,EAAQiB,KAAK,eAFjB,SAKE,cAAC,IAAD,0E,4GCjGJjB,EAAYlB,EAAQ,IAApBkB,QAEF0C,EAAqBC,SACzB3D,sNAAY4D,8BAAgC,IAQvC,SAAe/D,EAAtB,kC,4CAAO,WAAuBK,GAAvB,uBAAAsB,EAAA,6DACCrB,EAAyBD,EAAzBC,IAAK0D,EAAoB3D,EAApB2D,OAAQC,EAAY5D,EAAZ4D,QAEfC,EAAU,GAETD,GAAYA,EAAQ,kBACvBC,EAAQ,gBAAkB,qBAGxBC,EAAYpC,aAAaqC,QAAQ,eAGnCF,EAAO,cAAoBC,GAG7B9D,EAAK6D,QAAU,IAAIG,QAAQH,GAEvBF,GACFM,OAAOC,KAAKP,GAAQQ,SAAQ,SAACC,QACPC,IAAhBV,EAAOS,IACTnE,EAAIqE,aAAaC,OAAOH,EAAKT,EAAOS,OAKtCpE,EAAKG,MAAoC,qBAA5B0D,EAAQ,kBACvB7D,EAAKG,KAAOqE,KAAKC,UAAUzE,EAAKG,OA1B7B,kBA6BE,IAAIuE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAYC,YAAW,WAC3BF,EAAO,IAAIG,MAAM,sBACK,IAArBvB,GAEHwB,MAAM/E,EAAKD,GAAMiF,MAAK,SAACxD,GACrByD,aAAaL,GAEW,MAApBpD,EAAS0D,QAAgBrE,EAAQiB,KAAR,WAEzBN,EAAS2D,GACX3D,EAAS4D,OAAOJ,MAAK,SAACK,GACpBX,EAAQW,MAGV7D,EAAS4D,OAAOJ,MAAK,SAACK,GACpBV,EAAOU,aA7CV,4C","file":"static/js/16.376bfcca.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Card, Label, Button } from \"reactstrap\";\n\nexport const CustomCard = styled(Card)`\n  margin-top: 100px;\n  text-align: center;\n  background: #fff;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid #d9d9d9;\n  border-radius: 5px;\n  margin-bottom: 30px;\n\n  @media (min-width: 768px) {\n    padding: 50px;\n    width: 50%;\n  }\n\n  @media (max-width: 768px) {\n    padding-top: 50px;\n    padding-bottom: 50px;\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 150px;\n  }\n`;\n\nexport const CustomLabel = styled(Label)`\n  float: left;\n  font-weight: bold;\n`;\n\nexport const CustomButton = styled(Button)`\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const BackArrowContainer = styled.div`\n  position: absolute;\n  top: 80px;\n  left: 20px;\n  cursor: pointer;\n`;\n\nexport const BottomContainer = styled.div`\n  margin-top: 40px;\n  cursor: pointer;\n`;\n","// Serviços\nconst { request } = require(\"./RequestService\");\n\n// Constantes\nconst BASE_URL = `${process.env.REACT_APP_API_URL}/auth`;\n\nexport function login(data) {\n  const url = new URL(BASE_URL + \"/login\");\n\n  let method = \"POST\";\n\n  return request({\n    url,\n    body: data,\n    method,\n  });\n}\n","import React, { useState } from \"react\";\nimport { CardBody, Row, Col, Form, FormGroup, Input } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CustomCard,\n  CustomLabel,\n  CustomButton,\n  BottomContainer,\n} from \"./styles\";\nimport { OrangeSpan, ErrorSpan } from \"../../styles/General.style\";\nimport logo from \"../../assets/icons/icongaja.png\";\n\nimport * as AuthService from \"../../services/AuthService\";\n\nfunction Login(props) {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n\n  const onChangeInput = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let response = await AuthService.login(user);\n      if (response) {\n        localStorage.setItem(\"USER_JWT\", response.jwt);\n        localStorage.setItem(\"USER_ID\", response.user.id);\n        props.loginEvent();\n        history.push(\"/meus-eventos\");\n      }\n    } catch (error) {\n      console.log(\"ERROR\", error);\n      setErrorMessage(\n        error && error.err\n          ? error.err.message\n          : \"Ocorreu um erro, tente novamente.\"\n      );\n    }\n  };\n\n  return (\n    <CustomCard>\n      <div style={{ textAlign: \"center\" }}>\n        <img src={logo} alt=\"Logo\" style={{ width: 60, height: 60 }} />\n      </div>\n      <CardBody>\n        <Form onSubmit={onSubmit}>\n          <Row>\n            <Col sm=\"12\">\n              <FormGroup>\n                <CustomLabel for=\"title\">Email:</CustomLabel>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={onChangeInput}\n                  value={user.email}\n                  required\n                />\n              </FormGroup>\n            </Col>\n            <Col sm=\"12\">\n              <FormGroup>\n                <CustomLabel for=\"title\">Senha:</CustomLabel>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={onChangeInput}\n                  value={user.password}\n                  required\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          {errorMessage && (\n            <ErrorSpan>\n              {errorMessage}\n              <br />\n            </ErrorSpan>\n          )}\n          <br />\n          <CustomButton color=\"primary\">Entrar</CustomButton>\n\n          <BottomContainer\n            onClick={() => {\n              history.push(\"/cadastrar\");\n            }}\n          >\n            <OrangeSpan>\n              Ainda não possui uma conta? Registre-se aqui\n            </OrangeSpan>\n          </BottomContainer>\n        </Form>\n      </CardBody>\n    </CustomCard>\n  );\n}\n\nexport default Login;\n","const { history } = require(\"../history\");\n\nconst TIMEOUT_IN_SECONDS = parseInt(\n  process.env.REACT_APP_TIMEOUT_IN_SECONDS || 20\n);\n\n/**\n * Executa uma requisição para a url informada.\n *\n * @param {Object} data Opções da requisição\n */\nexport async function request(data) {\n  let { url, params, options } = data;\n\n  let headers = {};\n\n  if (!options || !options[\"Content-Type\"]) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  let userToken = localStorage.getItem(\"USER_JWT\");\n\n  if (userToken) {\n    headers[\"Authorization\"] = userToken;\n  }\n\n  data.headers = new Headers(headers);\n\n  if (params) {\n    Object.keys(params).forEach((key) => {\n      if (params[key] !== undefined) {\n        url.searchParams.append(key, params[key]);\n      }\n    });\n  }\n\n  if (data.body && headers[\"Content-Type\"] === \"application/json\") {\n    data.body = JSON.stringify(data.body);\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(\"Promise timeout\"));\n    }, TIMEOUT_IN_SECONDS * 1000);\n\n    fetch(url, data).then((response) => {\n      clearTimeout(timeoutId);\n\n      if (response.status === 401) history.push(`/entrar`); // TODO NOT AUTHORIZED?\n\n      if (response.ok) {\n        response.json().then((result) => {\n          resolve(result);\n        });\n      } else {\n        response.json().then((result) => {\n          reject(result);\n        });\n      }\n    });\n  });\n}\n"],"sourceRoot":""}